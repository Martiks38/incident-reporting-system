-- MySQL Script generated by MySQL Workbench
-- Thu Nov 16 20:54:56 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`technical`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`technical` (
  `technical_name` VARCHAR(32) NOT NULL,
  `technical_id` VARCHAR(36) NOT NULL,
  PRIMARY KEY (`technical_id`));


-- -----------------------------------------------------
-- Table `mydb`.`specialty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`specialty` (
  `specialty_id` INT NULL AUTO_INCREMENT,
  `specialty_name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`specialty_id`),
  UNIQUE INDEX `specialty_name_UNIQUE` (`specialty_name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `mydb`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`client` (
  `client_id` VARCHAR(36) NOT NULL,
  `cuit` VARCHAR(11) NOT NULL,
  `service` VARCHAR(18) NOT NULL,
  `business_name` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`client_id`));


-- -----------------------------------------------------
-- Table `mydb`.`type_problem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`type_problem` (
  `type_problem_id` INT NULL AUTO_INCREMENT,
  `type_problem_name` VARCHAR(30) NOT NULL,
  `resolution_time` INT NOT NULL,
  PRIMARY KEY (`type_problem_id`),
  UNIQUE INDEX `type_problem_name_UNIQUE` (`type_problem_name` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `mydb`.`incident`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`incident` (
  `incident_id` VARCHAR(36) NOT NULL,
  `considerations` VARCHAR(255) NOT NULL,
  `technical_id` VARCHAR(32) NOT NULL,
  `client_id` VARCHAR(32) NOT NULL,
  `resolved` TINYINT NOT NULL DEFAULT 0,
  `type_problem_id` INT NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`incident_id`),
  INDEX `technical_id_idx` (`technical_id` ASC) VISIBLE,
  INDEX `client_id_idx` (`client_id` ASC) VISIBLE,
  INDEX `type_problem_idx` (`type_problem_id` ASC) VISIBLE,
  CONSTRAINT `technical_id`
    FOREIGN KEY (`technical_id`)
    REFERENCES `mydb`.`technical` (`technical_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `client_id`
    FOREIGN KEY (`client_id`)
    REFERENCES `mydb`.`client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `type_problem`
    FOREIGN KEY (`type_problem_id`)
    REFERENCES `mydb`.`type_problem` (`type_problem_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`technical__specialty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`technical__specialty` (
  `technical_id` VARCHAR(36) NOT NULL,
  `specialty_id` INT NOT NULL,
  PRIMARY KEY (`technical_id`, `specialty_id`),
  INDEX `specialty_id_idx` (`specialty_id` ASC) VISIBLE,
  CONSTRAINT `technical_id`
    FOREIGN KEY (`technical_id`)
    REFERENCES `mydb`.`technical` (`technical_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `specialty_id`
    FOREIGN KEY (`specialty_id`)
    REFERENCES `mydb`.`specialty` (`specialty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `mydb`.`type_problem__specialty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`type_problem__specialty` (
  `type_problem_id` INT NOT NULL,
  `specialty_id` INT NOT NULL,
  PRIMARY KEY (`type_problem_id`, `specialty_id`),
  INDEX `fk_type_problem_has_specialty_specialty1_idx` (`specialty_id` ASC) VISIBLE,
  INDEX `fk_type_problem_has_specialty_type_problem1_idx` (`type_problem_id` ASC) VISIBLE,
  CONSTRAINT `type_problem`
    FOREIGN KEY (`type_problem_id`)
    REFERENCES `mydb`.`type_problem` (`type_problem_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `specialty_id`
    FOREIGN KEY (`specialty_id`)
    REFERENCES `mydb`.`specialty` (`specialty_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
